import React from "react";
import { BRAND_COLORS } from "../../constants";

export const AmplifyLogo = () => (
  <svg
    width="124"
    height="32"
    viewBox="0 0 124 32"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M27.1624 27.4557C28.5602 26.0982 29.7049 24.4818 30.5332 22.6928C30.6425 22.4512 30.585 22.1694 30.4009 21.9795L26.311 17.8896L26.3571 27.1221C26.3628 27.5362 26.869 27.7491 27.1624 27.4557Z"
      fill="#7566A0"
    />
    <path
      d="M1.46682 22.6928C2.30091 24.499 3.46287 26.1269 4.87218 27.4902C5.1713 27.7778 5.6775 27.565 5.67175 27.1508L5.61998 17.9586L1.59337 21.9853C1.4093 22.1693 1.35178 22.4512 1.46682 22.6928Z"
      fill="#7566A0"
    />
    <path
      d="M16.0029 0C7.1616 0 0 7.1616 0 16.0029C0 16.4688 0.0230092 16.929 0.0632752 17.3892C0.0920367 17.7343 0.506202 17.8896 0.747798 17.6423L15.5082 2.87615C15.7785 2.60579 16.2157 2.60579 16.4861 2.87615L31.2464 17.6365C31.488 17.8781 31.9022 17.7228 31.931 17.3834C31.9712 16.929 31.9942 16.4631 31.9942 15.9971C32 7.1616 24.8384 0 16.0029 0Z"
      fill="#7566A0"
    />
    <path
      d="M19.6039 17.8263C19.6039 15.5829 17.5561 13.8227 15.2264 14.3059C13.8516 14.5935 12.7472 15.7152 12.4768 17.09C12.1547 18.7237 12.937 20.2078 14.2082 20.9441C14.5764 21.1569 14.7374 21.5998 14.6454 22.014L12.5918 30.9358C12.5113 31.2752 12.7241 31.6203 13.0635 31.6951C14.0127 31.8964 14.9963 32 16.0087 32C17.0154 32 18.0048 31.8964 18.9539 31.6951C19.2933 31.6203 19.5061 31.2752 19.4256 30.9358L17.3662 21.991C17.2685 21.5596 17.4813 21.1397 17.8609 20.9153C18.8964 20.2826 19.6039 19.1379 19.6039 17.8263Z"
      fill="#00BFB2"
    />
    <path
      d="M44.2351 11.0386C42.4174 11.0386 41.0713 11.355 39.7541 11.8555C39.2824 12.0395 38.8855 12.54 38.8855 13.121C38.8855 13.8573 39.4895 14.4382 40.2315 14.4382C40.3868 14.4382 40.5479 14.4095 40.7319 14.3577C41.6005 14.0126 42.6014 13.8055 43.8152 13.8055C46.0528 13.8055 47.2666 14.8582 47.2666 16.8369V17.1821C46.1851 16.8369 45.0807 16.6011 43.5218 16.6011C40.1222 16.6011 37.7753 18.0794 37.7753 21.0821V21.1339C37.7753 23.9295 40.0934 25.4309 42.705 25.4309C44.8391 25.4309 46.2887 24.5335 47.2378 23.4003V23.9295C47.2378 24.6428 47.8705 25.2756 48.7909 25.2756C49.6595 25.2756 50.344 24.614 50.344 23.7454V16.8887C50.344 15.071 49.8723 13.5927 48.8427 12.5918C47.8705 11.5909 46.3174 11.0386 44.2351 11.0386ZM47.3183 20.133C47.3183 21.899 45.7134 23.1127 43.6023 23.1127C42.0722 23.1127 40.8873 22.3476 40.8873 21.0074V20.9556C40.8873 19.506 42.101 18.6374 44.1546 18.6374C45.4201 18.6374 46.5015 18.8733 47.3183 19.1896V20.133Z"
      fill="#222222"
    />
    <path
      d="M68.7169 10.9351C66.6058 10.9351 65.1332 11.9129 64.023 13.3855C63.2867 11.9072 61.8602 10.9351 59.8584 10.9351C57.7243 10.9351 56.5105 12.097 55.6132 13.3338V12.6723C55.6132 11.7749 54.8999 11.0674 54.0083 11.0674C53.1109 11.0674 52.4264 11.7806 52.4264 12.6723V23.6879C52.4264 24.5853 53.1397 25.2698 54.0083 25.2698C54.9056 25.2698 55.6132 24.5853 55.6132 23.6879V17.2856C55.6132 15.1515 56.8269 13.8342 58.5929 13.8342C60.3588 13.8342 61.4115 15.0479 61.4115 17.2051V23.6879C61.4115 24.5853 62.1248 25.2698 63.0164 25.2698C63.885 25.2698 64.5982 24.5853 64.5982 23.6879V17.2856C64.5982 15.0479 65.835 13.8342 67.5779 13.8342C69.3726 13.8342 70.3966 15.0192 70.3966 17.2338V23.6879C70.3966 24.5853 71.1098 25.2698 72.0014 25.2698C72.8988 25.2698 73.5833 24.5853 73.5833 23.6879V16.2559C73.5948 12.8563 71.7483 10.9351 68.7169 10.9351Z"
      fill="#222222"
    />
    <path
      d="M83.6613 10.9351C81.3949 10.9351 79.9453 12.097 78.9157 13.5466V12.678C78.9157 11.7806 78.2024 11.0731 77.3108 11.0731C76.4134 11.0731 75.7289 11.7864 75.7289 12.678V27.9101C75.7289 28.8074 76.4422 29.492 77.3108 29.492C78.2081 29.492 78.9157 28.8074 78.9157 27.9101V22.9804C79.8878 24.2689 81.3374 25.4308 83.6613 25.4308C86.9574 25.4308 90.1154 22.8193 90.1154 18.2117V18.1599C90.1154 13.5178 86.9286 10.9351 83.6613 10.9351ZM86.8768 18.206C86.8768 20.9498 85.0821 22.6582 82.8962 22.6582C80.7334 22.6582 78.8351 20.8693 78.8351 18.206V18.1542C78.8351 15.4909 80.7334 13.7019 82.8962 13.7019C85.0591 13.7019 86.8768 15.4679 86.8768 18.1542V18.206Z"
      fill="#222222"
    />
    <path
      d="M93.4344 5.76953C92.5371 5.76953 91.8525 6.48282 91.8525 7.35141V23.6879C91.8525 24.5853 92.5658 25.2698 93.4344 25.2698C94.3318 25.2698 95.0393 24.5853 95.0393 23.6879V7.35141C95.0451 6.47706 94.3318 5.76953 93.4344 5.76953Z"
      fill="#222222"
    />
    <path
      d="M99.2327 5.92487C98.2031 5.92487 97.415 6.52886 97.415 7.47798V7.6333C97.415 8.58242 98.2031 9.21518 99.2327 9.21518C100.262 9.21518 101.05 8.58242 101.05 7.6333V7.47798C101.05 6.53461 100.262 5.92487 99.2327 5.92487Z"
      fill="#222222"
    />
    <path
      d="M99.2328 11.0674C98.3354 11.0674 97.6509 11.7807 97.6509 12.6723V23.6879C97.6509 24.5853 98.3642 25.2698 99.2328 25.2698C100.13 25.2698 100.838 24.5853 100.838 23.6879V12.6723C100.843 11.7749 100.13 11.0674 99.2328 11.0674Z"
      fill="#222222"
    />
    <path
      d="M122.345 11.0674C121.529 11.0674 121.08 11.6196 120.815 12.2811L117.335 21.5308L113.734 12.7356C113.447 11.9993 112.894 11.332 111.606 11.332H107.113V10.5669C107.113 9.11736 107.746 8.4616 108.96 8.4616C109.173 8.4616 109.432 8.49036 109.621 8.51337C110.358 8.54214 110.967 7.93239 110.967 7.1961C110.967 6.48281 110.438 5.95936 109.863 5.87882C109.414 5.79829 108.885 5.74652 108.258 5.74652C106.889 5.74652 105.859 6.11467 105.123 6.85096C104.387 7.58725 103.99 8.74922 103.99 10.2793V11.309H103.438C102.701 11.309 102.092 11.913 102.092 12.655C102.092 13.3913 102.696 13.9723 103.438 13.9723H103.99V23.6994C103.99 24.568 104.703 25.2813 105.572 25.2813C106.469 25.2813 107.177 24.568 107.177 23.6994V13.9665H110.916L115.822 24.9304L115.719 25.218C115.19 26.2995 114.689 26.6964 113.74 26.6964C113.291 26.6964 113.004 26.6158 112.636 26.5123C112.48 26.4605 112.319 26.4088 112.055 26.4088C111.37 26.4088 110.766 26.938 110.766 27.726C110.766 28.4911 111.295 28.888 111.767 29.0433C112.429 29.3079 113.084 29.4402 113.982 29.4402C116.219 29.4402 117.485 28.3875 118.67 25.5402L123.755 13.3395C123.807 13.1842 123.887 12.8391 123.887 12.5745C123.876 11.7232 123.191 11.0674 122.345 11.0674Z"
      fill="#222222"
    />
  </svg>
);

const PropertiesSvg = ({ selected }) => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M17 11V5C17 3.9 16.1 3 15 3H9C7.9 3 7 3.9 7 5V7H5C3.9 7 3 7.9 3 9V19C3 20.1 3.9 21 5 21H10C10.55 21 11 20.55 11 20V17H13V20C13 20.55 13.45 21 14 21H19C20.1 21 21 20.1 21 19V13C21 11.9 20.1 11 19 11H17ZM7 19H5V17H7V19ZM7 15H5V13H7V15ZM7 11H5V9H7V11ZM11 15H9V13H11V15ZM11 11H9V9H11V11ZM11 7H9V5H11V7ZM15 15H13V13H15V15ZM15 11H13V9H15V11ZM15 7H13V5H15V7ZM19 19H17V17H19V19ZM19 15H17V13H19V15Z"
      fill={getSvgFillColor(selected)}
    />
  </svg>
);

const MyCompanySvg = ({ selected }) => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M16.5 12C17.88 12 18.99 10.88 18.99 9.5C18.99 8.12 17.88 7 16.5 7C15.12 7 14 8.12 14 9.5C14 10.88 15.12 12 16.5 12ZM9 11C10.66 11 11.99 9.66 11.99 8C11.99 6.34 10.66 5 9 5C7.34 5 6 6.34 6 8C6 9.66 7.34 11 9 11ZM16.5 14C14.67 14 11 14.92 11 16.75V18C11 18.55 11.45 19 12 19H21C21.55 19 22 18.55 22 18V16.75C22 14.92 18.33 14 16.5 14ZM9 13C6.67 13 2 14.17 2 16.5V18C2 18.55 2.45 19 3 19H9V16.75C9 15.9 9.33 14.41 11.37 13.28C10.5 13.1 9.66 13 9 13Z"
      fill={getSvgFillColor(selected)}
    />
  </svg>
);

const VendorsSvg = ({ selected }) => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M20.9901 17.99L16.0501 13.05L13.9301 15.17L18.8701 20.11C19.4601 20.7 20.4101 20.7 20.9901 20.11C21.5701 19.52 21.5701 18.57 20.9901 17.99Z"
      fill="#ADA4C7"
    />
    <path
      d="M17.65 9.99999C19.58 9.99999 21.15 8.42999 21.15 6.49999C21.15 5.91999 20.99 5.37999 20.74 4.89999L18.04 7.59999L16.55 6.10999L19.25 3.40999C18.77 3.15999 18.23 2.99999 17.65 2.99999C15.72 2.99999 14.15 4.56999 14.15 6.49999C14.15 6.90999 14.23 7.29999 14.36 7.65999L12.51 9.50999L10.73 7.72999C11.12 7.33999 11.12 6.70999 10.73 6.31999L10.02 5.60999L12.14 3.48999C10.97 2.31999 9.07004 2.31999 7.90004 3.48999L5.08004 6.31999C4.69004 6.70999 4.69004 7.33999 5.08004 7.72999L5.79004 8.43999H3.25004C3.06004 8.43999 2.88004 8.50999 2.75004 8.64999C2.47004 8.92999 2.47004 9.36999 2.75004 9.64999L5.29004 12.19C5.57004 12.47 6.01004 12.47 6.29004 12.19C6.42004 12.06 6.50004 11.88 6.50004 11.69V9.14999L7.20004 9.84999C7.59004 10.24 8.22004 10.24 8.61004 9.84999L10.39 11.63L4.04004 17.98C3.45004 18.57 3.45004 19.52 4.04004 20.1C4.63004 20.69 5.58004 20.69 6.16004 20.1L16.48 9.78999C16.85 9.91999 17.24 9.99999 17.65 9.99999Z"
      fill={getSvgFillColor(selected)}
    />
  </svg>
);

const ShoppingListsSvg = ({ selected }) => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M7 18C5.9 18 5.01 18.9 5.01 20C5.01 21.1 5.9 22 7 22C8.1 22 9 21.1 9 20C9 18.9 8.1 18 7 18ZM1 3C1 3.55 1.45 4 2 4H3L6.6 11.59L5.25 14.03C4.52 15.37 5.48 17 7 17H18C18.55 17 19 16.55 19 16C19 15.45 18.55 15 18 15H7L8.1 13H15.55C16.3 13 16.96 12.59 17.3 11.97L20.88 5.48C21.25 4.82 20.77 4 20.01 4H5.21L4.54 2.57C4.38 2.22 4.02 2 3.64 2H2C1.45 2 1 2.45 1 3ZM17 18C15.9 18 15.01 18.9 15.01 20C15.01 21.1 15.9 22 17 22C18.1 22 19 21.1 19 20C19 18.9 18.1 18 17 18Z"
      fill={getSvgFillColor(selected)}
    />
  </svg>
);

const ChatSvg = ({ selected }) => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M20 2H4C2.9 2 2.01 2.9 2.01 4L2 22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM7 9H17C17.55 9 18 9.45 18 10C18 10.55 17.55 11 17 11H7C6.45 11 6 10.55 6 10C6 9.45 6.45 9 7 9ZM13 14H7C6.45 14 6 13.55 6 13C6 12.45 6.45 12 7 12H13C13.55 12 14 12.45 14 13C14 13.55 13.55 14 13 14ZM17 8H7C6.45 8 6 7.55 6 7C6 6.45 6.45 6 7 6H17C17.55 6 18 6.45 18 7C18 7.55 17.55 8 17 8Z"
      fill={getSvgFillColor(selected)}
    />
  </svg>
);

const EditSvg = ({ selected }) => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M3 17.46V20.5C3 20.78 3.22 21 3.5 21H6.54C6.67 21 6.8 20.95 6.89 20.85L17.81 9.94L14.06 6.19L3.15 17.1C3.05 17.2 3 17.32 3 17.46ZM20.71 7.04C21.1 6.65 21.1 6.02 20.71 5.63L18.37 3.29C17.98 2.9 17.35 2.9 16.96 3.29L15.13 5.12L18.88 8.87L20.71 7.04Z"
      fill={getSvgFillColor(selected)}
    />
  </svg>
);

const ChevronRightSvg = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
  >
    <path
      d="M9.29055 6.71002C8.90055 7.10002 8.90055 7.73002 9.29055 8.12002L13.1705 12L9.29055 15.88C8.90055 16.27 8.90055 16.9 9.29055 17.29C9.68055 17.68 10.3105 17.68 10.7005 17.29L15.2905 12.7C15.6805 12.31 15.6805 11.68 15.2905 11.29L10.7005 6.70002C10.3205 6.32002 9.68055 6.32002 9.29055 6.71002Z"
      fill="#222222"
      fillOpacity="0.87"
    />
  </svg>
);

const PlusSignSvg = () => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z"
      fill="white"
    />
  </svg>
);

const EmailSvg = () => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M20 4H4C2.9 4 2.01 4.9 2.01 6L2 18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6C22 4.9 21.1 4 20 4ZM19.6 8.25L12.53 12.67C12.21 12.87 11.79 12.87 11.47 12.67L4.4 8.25C4.15 8.09 4 7.82 4 7.53C4 6.86 4.73 6.46 5.3 6.81L12 11L18.7 6.81C19.27 6.46 20 6.86 20 7.53C20 7.82 19.85 8.09 19.6 8.25Z"
      fill="#00BFB2"
    />
  </svg>
);

const TelephoneSvg = () => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M19.23 15.26L16.69 14.97C16.08 14.9 15.48 15.11 15.05 15.54L13.21 17.38C10.38 15.94 8.05998 13.63 6.61998 10.79L8.46998 8.94C8.89998 8.51 9.10998 7.91 9.03998 7.3L8.74998 4.78C8.62998 3.77 7.77998 3.01 6.75998 3.01H5.02998C3.89998 3.01 2.95998 3.95 3.02998 5.08C3.55998 13.62 10.39 20.44 18.92 20.97C20.05 21.04 20.99 20.1 20.99 18.97V17.24C21 16.23 20.24 15.38 19.23 15.26Z"
      fill="#00BFB2"
    />
  </svg>
);

const LocationSvg = () => (
  // note that this icon has no inbuilt padding!! the figma icon didn't give an option for it, like it did the others. so I add my own here, to make the component 24px by 24px.
  <span style={{ padding: "0.5px 5px" }}>
    <svg
      width="14"
      height="20"
      viewBox="0 0 14 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M7 0C3.13 0 0 3.13 0 7C0 12.25 7 20 7 20C7 20 14 12.25 14 7C14 3.13 10.87 0 7 0ZM7 9.5C5.62 9.5 4.5 8.38 4.5 7C4.5 5.62 5.62 4.5 7 4.5C8.38 4.5 9.5 5.62 9.5 7C9.5 8.38 8.38 9.5 7 9.5Z"
        fill="#00BFB2"
      />
    </svg>
  </span>
);

/**
 * gets the appropriate icon color, based on whether the icon is selected
 * @param {boolean | number} selected - specifies the color. a simple boolean (i.e. just passing 'selected' as a prop w no value) will return primary500, while specifiing selected={400} will return primary400. otherwise, will return pastel (primary200)
 * @returns {string} the specified color
 */
const getSvgFillColor = (selected) =>
  selected
    ? selected === 400
      ? BRAND_COLORS.primary400
      : BRAND_COLORS.primary500
    : BRAND_COLORS.primary200;

/**
 * renders the appropriate svg icon for the passed caption. changes the color based on whether the icon is selected or not
 * @param {string} caption - one of the items in the nav bar. enumerated value of the available icon names.
 * @param {boolean | number} selected - whether the item is selected or not. specifies the color. selected={true} gets primary500 (darkest purple), selected={400} gets primary400 (less dark purple), and selected={false} gets primary200 (pastel purple). Note that this is an overloaded parameter; some icons have only one color (e.g. ChevronRightSvg) and for these, the selected prop has no effect.
 * @returns jsx markup for specified icon, in the specified color.
 */
export const SvgIcon = ({ iconName, selected }) => {
  return (
    <>
      {iconName === "Properties" ? (
        <PropertiesSvg selected={selected} />
      ) : iconName === "My Company" ? (
        <MyCompanySvg selected={selected} />
      ) : iconName === "Vendors" ? (
        <VendorsSvg selected={selected} />
      ) : iconName === "Chat" ? (
        <ChatSvg selected={selected} />
      ) : iconName === "Shopping Lists" ? (
        <ShoppingListsSvg selected={selected} />
      ) : iconName === "Edit" ? (
        <EditSvg selected={selected} />
      ) : iconName === "Chevron Right" ? (
        <ChevronRightSvg />
      ) : iconName === "Plus Sign" ? (
        <PlusSignSvg />
      ) : iconName === "Email" ? (
        <EmailSvg />
      ) : iconName === "Telephone" ? (
        <TelephoneSvg />
      ) : iconName === "Location" ? (
        <LocationSvg />
      ) : null}
    </>
  );
};
